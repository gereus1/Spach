import SwiftUI
import RealmSwift

@main
struct SpachApp: SwiftUI.App {
    @AppStorage("isLoggedIn")          private var isLoggedIn        = false
    @AppStorage("userRole")            private var userRole          = ""
    @AppStorage("currentEmail")        private var currentEmail      = ""
    @AppStorage("hasSeenOnboarding")   private var hasSeenOnboarding = false

    init() {
        // üîº –ü—ñ–¥–Ω—ñ–º–∞—î–º–æ –≤–µ—Ä—Å—ñ—é —Å—Ö–µ–º–∏ ‚Äî —Ç–µ–ø–µ—Ä 6
        let config = Realm.Configuration(
            schemaVersion: 7,
            migrationBlock: { migration, oldVersion in
                guard oldVersion < 7 else { return }

                // ‚Äî –ú—ñ–≥—Ä–∞—Ü—ñ—è –¥–ª—è districts (User)
                migration.enumerateObjects(ofType: User.className()) { _, newObject in
                    guard let list = newObject?["districts"] as? RealmSwift.List<String> else { return }
                    list.append(District.shevchenkivskyi.rawValue)
                }

                // ‚Äî –ú—ñ–≥—Ä–∞—Ü—ñ—è –¥–ª—è districts (Trainer)
                migration.enumerateObjects(ofType: Trainer.className()) { _, newObject in
                    guard let list = newObject?["districts"] as? RealmSwift.List<String> else { return }
                    list.append(District.shevchenkivskyi.rawValue)
                }

                // ‚Äî –ú—ñ–≥—Ä–∞—Ü—ñ—è –¥–ª—è avatarData
//                migration.enumerateObjects(ofType: User.className()) { _, newObject in
//                    newObject?["avatarData"] = nil
//                }
//                migration.enumerateObjects(ofType: Trainer.className()) { _, newObject in
//                    newObject?["avatarData"] = nil
//                }

                // ‚Äî –ú—ñ–≥—Ä–∞—Ü—ñ—è ContactRequest
                migration.enumerateObjects(ofType: "ContactRequest") { _, newObject in
                    // –ú—ñ–≥—Ä–∞—Ü—ñ—è –¥–æ –Ω–æ–≤–æ—ó —Å—Ç—Ä—É–∫—Ç—É—Ä–∏
                    // –°—Ç–∞—Ä—ñ –ø–æ–ª—è –≤–∂–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ñ, —Ç–æ–º—É –ø—Ä–æ—Å—Ç–æ –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –¥–µ—Ñ–æ–ª—Ç–∏
                    newObject?["userRequested"] = true
                    newObject?["trainerConfirmed"] = false

                    // –ù–æ–≤–µ –ø–æ–ª–µ
                    if newObject?["rejected"] == nil {
                        newObject?["rejected"] = false
                    }
                }
            },
            deleteRealmIfMigrationNeeded: false
        )

        // 2) –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Ñ–∞–π–ª —É Application Support
        var finalConfig = config
        if let supportURL = FileManager.default
            .urls(for: .applicationSupportDirectory, in: .userDomainMask)
            .first
        {
            try? FileManager.default.createDirectory(
                at: supportURL,
                withIntermediateDirectories: true
            )
            finalConfig.fileURL = supportURL
                .appendingPathComponent("default.realm")
        }

        // 3) –ó–∞—Å—Ç–æ—Å–æ–≤—É—î–º–æ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é
        Realm.Configuration.defaultConfiguration = finalConfig
    }

    var body: some Scene {
        WindowGroup {
            if !hasSeenOnboarding {
                OnboardingView()
            } else if isLoggedIn {
                if userRole == "trainer" {
                    TrainerHomeView()
                } else {
                    MainTabView()
                }
            } else {
                AuthRootView()
            }
        }
    }
}
